import {clpp} from "./cl.core.js";let g={};const _ = clpp._;var f=function(window){'use strict';var IU=function(a){a.f=new _.ts;a.f.on(a.m,_.gg,()=>GU(a));a.f.on(a.m,_.fg,()=>{s.Media.play(a.a,a.m.getPosition())});a.f.on(a.m,_.se,()=>HU(a));a.f.on(a.m,_.Nf,b=>{b=b.detail;switch(b.currentState){case _.Zn:a.a.length||HU(a);s.Media.play(a.a,a.m.getPosition());break;case _.Yn:case _.Rn:GU(a);break;case _.On:case _.Wn:case _.Vn:a.g.info(`Close session for ${a.a} `+`in player state ${b.currentState}.`),GU(a),s.Media.close(a.a),a.a=""}})},GU=function(a){s.Media.stop(a.a,a.m.getPosition())},
HU=function(a){{const b=a.m.getLoadedSource();a.a=b?b.name||b.url:""}a.g.info(`Open session for ${a.a} `+`with duration ${a.m.getDuration()}`);s.Media.open(a.a,a.m.getDuration(),_.ra)},JU=class extends _.Au{constructor(){super();this.m=this.f=null;this.a="";this.g=new _.R("clpp.adobe.AdobePlugin")}onPlayerCreated(a){window.s&&s.Media?(this.m=a,IU(this)):this.g.warn("Adobe API not available.")}onPlayerWillDestroy(){this.f&&(this.f.release(),this.f=null);this.m=null;this.a=""}id(){return"adobe"}};
_.z("clpp.adobe.AdobeAnalyticsPlugin",JU);JU.Id="adobe";_.dp(new class{create(){return new JU}});};f.call(g, window);